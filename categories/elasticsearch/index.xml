<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elasticsearch on Guoqing Geng</title>
    <link>https://hellokangning.github.io/categories/elasticsearch/</link>
    <description>Recent content in Elasticsearch on Guoqing Geng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Sep 2017 16:26:31 +0800</lastBuildDate>
    
	<atom:link href="https://hellokangning.github.io/categories/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Directory in Lucene</title>
      <link>https://hellokangning.github.io/post/lucene-directory/</link>
      <pubDate>Tue, 05 Sep 2017 16:26:31 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/lucene-directory/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Document in Lucene</title>
      <link>https://hellokangning.github.io/post/lucene-document/</link>
      <pubDate>Mon, 07 Aug 2017 18:52:01 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/lucene-document/</guid>
      <description>In Lucene, a Document is the unit of search and index.
 An index consists of a sequence of documents. A document contains of one or more Fields. A field is a named sequence of terms. A term is a string.  In order to index data with Lucene, you must convert it to a stream of plain-text tokens firstly. Based on the stream, the document containning fields will be created.</description>
    </item>
    
    <item>
      <title>Guice Usage in Elasticsearch</title>
      <link>https://hellokangning.github.io/post/guice-usage-in-es/</link>
      <pubDate>Fri, 04 Aug 2017 15:58:27 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/guice-usage-in-es/</guid>
      <description>The motivation of using Guice lists here: Motivation.
To create bindings, extend AbstractModule and override its configure method. In the method body, call bind() to specify each binding. These methods are type checked so the compiler can report errors if you use the wrong types. Once you&amp;rsquo;ve created your modules, pass them as arguments to Guice.createInjector() to build an injector.
Elasticsearch has a ModulesBuilder which is responsible for assembling modules.</description>
    </item>
    
  </channel>
</rss>
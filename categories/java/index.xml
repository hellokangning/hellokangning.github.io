<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Guoqing Geng</title>
    <link>https://hellokangning.github.io/categories/java/</link>
    <description>Recent content in Java on Guoqing Geng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Apr 2018 11:37:29 +0800</lastBuildDate>
    
	<atom:link href="https://hellokangning.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java LinkedList</title>
      <link>https://hellokangning.github.io/post/java-linkedlist/</link>
      <pubDate>Wed, 18 Apr 2018 11:37:29 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/java-linkedlist/</guid>
      <description>&lt;p&gt;&lt;code&gt;LinkedList&lt;/code&gt; is a doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. By &amp;ldquo;doubly-linked&amp;rdquo;, it means we can traverse the list from the beginning to the end, and vice versa. This class is a member of Java Collections Framework, located in &lt;code&gt;java.util&lt;/code&gt;. Let&amp;rsquo;s go straight to the source code.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java String</title>
      <link>https://hellokangning.github.io/post/java-string/</link>
      <pubDate>Fri, 13 Apr 2018 11:33:34 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/java-string/</guid>
      <description>&lt;p&gt;&lt;code&gt;String&lt;/code&gt; is one of the most common type of data in computer languages. A Java string is a series of characters gathered together, such as &amp;ldquo;abc&amp;rdquo;. Strings are constant, which means their value cannot be changed after created.&lt;/p&gt;

&lt;p&gt;This post introduces the basic of Java string, includes methods for examining individual characters of the sequence, for comparing strings, for searching strings, for extracting substrings and so on.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JVM Series: Oop and Klass</title>
      <link>https://hellokangning.github.io/post/jvm-series-oop-klass/</link>
      <pubDate>Tue, 10 Apr 2018 14:46:26 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/jvm-series-oop-klass/</guid>
      <description>&lt;p&gt;As a part of &lt;a href=&#34;https://hellokangning.github.io/tags/jvm/&#34;&gt;JVM Series&lt;/a&gt;, this post tries to explore the object model in JVM.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JVM Series: Overview</title>
      <link>https://hellokangning.github.io/post/jvm-series-overview/</link>
      <pubDate>Tue, 09 Jan 2018 20:56:47 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/jvm-series-overview/</guid>
      <description>&lt;p&gt;When executing a java program, you may simply input in terminal, like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;javac HelloWorld.java
java HelloWorld
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Behind these commands, JVM, as the cornerstone of the Java platform, does a lot of work, which are what this blog attempts to figure out. Today, a new series about JVM will be started, and this is the first episode.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK Build-in Development Tools</title>
      <link>https://hellokangning.github.io/post/jdk-build-in-development-tools/</link>
      <pubDate>Thu, 14 Sep 2017 16:20:46 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/post/jdk-build-in-development-tools/</guid>
      <description>&lt;p&gt;The following documents contain important information you will need to know to get the most out of the JDK tools.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
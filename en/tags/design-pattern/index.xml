<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pattern on Qing&#39;s Landing</title>
    <link>https://hellokangning.github.io/en/tags/design-pattern/</link>
    <description>Recent content in Design Pattern on Qing&#39;s Landing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Oct 2018 16:16:13 +0800</lastBuildDate>
    
	<atom:link href="https://hellokangning.github.io/en/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design Patterns with First-class Functions</title>
      <link>https://hellokangning.github.io/en/post/design-patterns-with-first-class-functions/</link>
      <pubDate>Sat, 27 Oct 2018 16:16:13 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/en/post/design-patterns-with-first-class-functions/</guid>
      <description>&lt;p&gt;Design patterns are language-independent, but in the context of languages with first-class functions, it&amp;rsquo;s beneficial to rethink some patterns. The general idea is: you can replace instances of some participant class with simple functions, reducing a lot of boilerplate code.&lt;/p&gt;
&lt;p&gt;In this post, I will refactor Strategy using functions objects.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Quick Retrospect of Design Pattern</title>
      <link>https://hellokangning.github.io/en/post/retrospect-design-pattern/</link>
      <pubDate>Mon, 13 Aug 2018 15:24:26 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/en/post/retrospect-design-pattern/</guid>
      <description>&lt;p&gt;This post summarizes some design patterns I used in daily work or learnt from books.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hellokangning.github.io/images/design-pattern-overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 on Qing&#39;s Landing</title>
    <link>https://hellokangning.github.io/zh/categories/%E5%AE%B9%E5%99%A8/</link>
    <description>Recent content in 容器 on Qing&#39;s Landing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Nov 2019 20:12:20 +0800</lastBuildDate><atom:link href="https://hellokangning.github.io/zh/categories/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Namespace Explained</title>
      <link>https://hellokangning.github.io/zh/post/linux-namespace-explained/</link>
      <pubDate>Wed, 27 Nov 2019 20:12:20 +0800</pubDate>
      
      <guid>https://hellokangning.github.io/zh/post/linux-namespace-explained/</guid>
      <description>&lt;p&gt;最近在做 Kubernetes Security 相关的工作。作为一个 Kubernetes 新手，刚看到 yaml 文件中的 namespace 时，很容易和 Linux 的 Namespace 搞混。加上在读 Kubernetes 文档的时候，总时不时看到 Linux Namespace 的字样就更加困惑起来。以此为契机，正好把 Linux Namespace 再好好梳理一下，解开心中的谜团：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux 的 Namespace 是如何实现资源的隔离&lt;/li&gt;
&lt;li&gt;Linux 下哪些资源可以按照 Namespace 组织，如何组织&lt;/li&gt;
&lt;li&gt;Container 哪些地方用到了 Linux Namespace&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
